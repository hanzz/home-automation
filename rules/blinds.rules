rule "Automatic GF blinds up on Sunrise, but not before 7:00."
when
    Channel 'astro:sun:home_blinds_control:rise#event' triggered START
then
    if (AutoBlindsEnabled.state == ON && BlindsGF.state != 0) {
        BlindsGF.sendCommand(UP)
    }
end


rule "Automatic all blinds down on Sunset + 20 minutes."
when
    Channel 'astro:sun:home_blinds_control:set#event' triggered START
then
    if (AutoBlindsEnabled.state == ON) {
        Blinds.sendCommand(DOWN)
    }
end


rule "On sunrise, move GF blinds up if breakfast started."
when
    Channel 'astro:sun:home:rise#event' triggered START
then
    if (AutoBlindsEnabled.state == ON && Breakfast.state == ON && BlindsGF.state != 0) {
        BlindsGF.sendCommand(UP)
    }
end


rule "On breakfast start, move GF blinds up if sunrise already started."
when
    Item Breakfast changed to ON
then
    val sunrise = new DateTime(SunriseTime.state.toString)
    if (AutoBlindsEnabled.state == ON && now.isAfter(sunrise) && BlindsGF.state != 0) {
        BlindsGF.sendCommand(UP)
    }
end


rule "Everyday on 8:00, move the blinds in FF up."
when
    Time cron "0 0 8 1/1 * ? *"
then
    if (AutoBlindsEnabled.state == ON) {
        BlindsFF.sendCommand(UP)
    }
end

rule "Ground room blinds down if sun is shining."
when
    Item WeatherStationSolarRadiation changed
then

    val maxSolarRadiation = WeatherStationSolarRadiation.maximumSince(now.minusMinutes(20)).state
    logInfo("blinds.rules", "maxSolarRadiation " + maxSolarRadiation)

    // Handle the cases when Sun cannot shine into windows.
    if (SunElevation.state < 12) {
        if (SunAzimuth.state < 160) {
            // Sun is rising, so do nothing.
            return
        }
        else if (SunAzimuth.state > 235) {
            // Sun is setting, so move the blinds up.
            if (BlindGroundRoom.state != 0) {
                BlindGroundRoom.sendCommand(UP)
            }
            return
        }
    }
    else if (SunElevation.state > 40) {
        // Sun is too high to shine into the windows.
        if (BlindGroundRoom.state != 0) {
            BlindGroundRoom.sendCommand(UP)
        }
        return
    }
    else if (SunAzimuth.state > 235) {
        // Sun is setting, so move the blinds up.
        if (BlindGroundRoom.state != 0) {
            BlindGroundRoom.sendCommand(UP)
        }
        return
    }


    if (LG_TV0_Power.state == OFF && BlindLivingRoom.state != 0) {
	BlindLivingRoom.sendCommand(UP)
    }


    if (maxSolarRadiation < 250) {
	if (BlindGroundRoom.state != 0) {
		BlindGroundRoom.sendCommand(UP)
	}
	if (BlindLivingRoom.state != 0) {
		BlindLivingRoom.sendCommand(UP)
	}
        return
    }



    if (WeatherStationSolarRadiation.state > 250 && BlindGroundRoom.state != 100) {
        BlindGroundRoom.sendCommand(DOWN)
        Thread::sleep(42000)
        sendHttpGetRequest("http://10.0.0.110:8090?blind_name=GROUND_ROOM&cmd=UP_A_BIT")
        Thread::sleep(1000)
        sendHttpGetRequest("http://10.0.0.110:8090?blind_name=GROUND_ROOM&cmd=UP_A_BIT")
    }
    if (WeatherStationSolarRadiation.state > 250 && BlindLivingRoom.state != 100 && LG_TV0_Power.state == ON) {
        BlindLivingRoom.sendCommand(DOWN)
        Thread::sleep(21000)
        sendHttpGetRequest("http://10.0.0.110:8090?blind_name=LIVING_ROOM&cmd=UP_A_BIT")
    }

end
